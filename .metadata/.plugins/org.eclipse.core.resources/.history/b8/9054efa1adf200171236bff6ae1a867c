package com.springthymeleaf.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.UUID;

import org.springframework.util.Assert;
import org.thymeleaf.TemplateEngine;
import org.thymeleaf.context.Context;
import org.xhtmlrenderer.pdf.ITextRenderer;


import com.springthymeleaf.model.DocDaitails;
import com.springthymeleaf.model.Note;
import com.springthymeleaf.model.User;
import com.springthymeleaf.service.NoteService;
import com.springthymeleaf.service.UserService;

@Controller
@RequestMapping(value="/user")
public class PdfGenarator {

	@Autowired
	UserService userService;
	
	@Autowired
	NoteService noteService;
	
	@Autowired
	private TemplateEngine templateEngine;
	
	public static void createPdf(String templateName, Map map) throws Exception {
		Assert.notNull(templateName, "The templateName can not be null");
		Context ctx = new Context();
		if (map != null) {
		     Iterator itMap = map.entrySet().iterator();
		       while (itMap.hasNext()) {
			  Map.Entry pair = (Map.Entry) itMap.next();
		          ctx.setVariable(pair.getKey().toString(), pair.getValue());
			}
		}
		
		String processedHtml = templateEngine.process(templateName, ctx);
		  FileOutputStream os = null;
		  String fileName = UUID.randomUUID().toString();
	        try {
	            final File outputFile = File.createTempFile(fileName, ".pdf");
	            os = new FileOutputStream(outputFile);

	            ITextRenderer renderer = new ITextRenderer();
	            renderer.setDocumentFromString(processedHtml);
	            renderer.layout();
	            renderer.createPDF(os, false);
	            renderer.finishPDF();
	            System.out.println("PDF created successfully");
	        }
	        finally {
	            if (os != null) {
	                try {
	                    os.close();
	                } catch (IOException e) { /*ignore*/ }
	            }
	        }
	}
	
	@RequestMapping(value="/docdetails")
	public ModelAndView docDetails(HttpServletRequest request)
	{
		int userId = (int) request.getAttribute("userId");
		User user = userService.getUserById(userId);
		
		ModelAndView modelAndView = new ModelAndView();
		
		//modelAndView.setViewName("doc");
		modelAndView.addObject("user", user);
		
		Map<String,String> data = new HashMap<String,String>();
		data.put("name","James");
		try {
			PdfGenarator.createPdf("doc", data);
		} catch (Exception e) {
			
			e.printStackTrace();
		}
		
		//List<DocDaitails> allDoc = noteService.getAllDoc();
		//modelAndView.addObject("allDoc", allDoc);
		return modelAndView;
	}
	
}
